# -*- coding: utf-8 -*-
"""Довлатов чистовик.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VM6F68jREOcXa4XHnAH5uK6UPyNIUlyT
"""

with open("/content/drive/MyDrive/Курсовая/Тексты Довлатов.txt") as f:
  text = f.read ()

from google.colab import drive
drive.mount('/content/drive')

import re
text=text.replace('\n',' ')
text=text.replace(' -',' ').replace('- ',' ').replace('—',' ')
text= re.sub(r'[^\w\s\-]','',text)
text=text.split(' ')

word_list=[]
for token in text:
  if token !='':
    word_list.append(token)

num=len(word_list)
num

!pip install pymorphy2

import pymorphy2

morph = pymorphy2.MorphAnalyzer()

diction=[]
for word in word_list:
  diction.append(morph.parse(word)[0].normal_form)

with open("/content/drive/MyDrive/Курсовая/swl_optimum.txt") as f:
  swl = f.read ()

diction_new = [word for word in diction if not word in swl]

from collections import Counter

import pandas as pd

Counter(diction_new)

pos_list = []
for word in list(Counter(diction_new)):
  x = morph.parse(word)[0].tag.POS
  pos_list.append(x)

len(pos_list)

first_col = []
sec_col = []
th_col = []

for x, y in zip(Counter(diction_new), pos_list):
  first_col.append(x)
  sec_col.append(Counter(diction_new)[x])
  th_col.append(y)

df = pd.DataFrame(zip(first_col, sec_col, th_col))
df.columns=['Лемма', 'Количество словоупотреблений', 'Часть речи']

df.insert(2, 'Доля', df['Количество словоупотреблений'].apply(lambda z: z/num*100))

df.insert(3, 'Частота (ipm)', df['Количество словоупотреблений'].apply(lambda t: t*1000000/num))

rslt_df = df.sort_values(by='Количество словоупотреблений', ascending = False)
rslt_df

rslt_df.to_excel('FREQUENCY.xlsx', index=False)

del rslt_df['Лемма']
del rslt_df['Доля']
del rslt_df['Частота (ipm)']

rslt_df

df_pos_f=pd.pivot_table(rslt_df, index=['Часть речи'], values=['Количество словоупотреблений'], aggfunc='sum')
df_pos_f

df_pos_f.insert(1, 'Доля', df_pos_f['Количество словоупотреблений'].apply(lambda r: r/num*100))
df_pos_f

res1 = df_pos_f.T

res1['VERB'] = res1['INFN'] +res1['VERB']+res1['PRTF']+res1['GRND']
res1['REST'] = res1['NUMR'] +res1['CONJ']+res1['PRED']+res1['INTJ']+res1['ADJS']+res1['PRCL']+res1['PREP']+res1['COMP']+res1['NPRO']+res1['ADVB']

res2=res1.drop(['INFN', 'PRTF', 'GRND', 'NUMR', 'CONJ', 'PRED', 'INTJ', 'ADJS', 'PRCL', 'PREP', 'COMP', 'NPRO', 'ADVB'], axis=1)

res3 = res2.T

rslt_df2 = res3.sort_values(by='Доля', ascending = False)

res3_new = rslt_df2.reset_index()
res3_new

df_pos = pd.DataFrame({
    'Количество': df['Часть речи'].value_counts (),
    'Доля': (df['Часть речи'].value_counts ())/len(pos_list)*100
}).fillna(0) #Что это fillna? (импутировать нулевые значения в столбце с помощью функции)

print(df_pos[["Количество",
              "Доля"]].sort_values(["Количество",
                                    "Доля"], ascending=False))

res3 = df_pos.T

res3['VERB'] = res3['INFN'] +res3['VERB']+res3['PRTF']+res3['GRND']
res3['REST'] = res3['NUMR'] +res3['CONJ']+res3['PRED']+res3['INTJ']+res3['ADJS']+res3['PRCL']+res3['PREP']+res3['COMP']+res3['NPRO']++res3['ADVB']

res4=res3.drop(['INFN', 'PRTF', 'GRND', 'NUMR', 'CONJ', 'PRED', 'INTJ', 'ADJS', 'PRCL', 'PREP', 'COMP', 'NPRO', 'ADVB'], axis=1)

res5 = res4.T

rslt_df3 = res5.sort_values(by='Доля', ascending = False)

res5_new = rslt_df3.reset_index()
res5_new

res5_new.columns=['Часть речи', 'Количество', 'Доля']
res5_new

dataframe = pd.DataFrame({'Часть речи': res5_new['Часть речи'],
                          'Доля': res5_new['Доля']})

dataframe.groupby(['Часть речи']).sum().plot(kind='pie', autopct='%1.0f%%', y='Доля')