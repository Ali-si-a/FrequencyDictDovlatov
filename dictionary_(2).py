# -*- coding: utf-8 -*-
"""Dictionary (2)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qp6it4kFunvie3qmpk0guRLBY_7IYkFO
"""

with open("/content/Тексты Довлатов.txt") as f:
  text = f.read ()

import re
text_clear=re.sub('\\d', ' ', text)
text_new=[]
for word in text_clear.split():
  clear_word=""
  text_new.append(clear_word)

word_list=[]
for token in text_new:
  if token !='':
    word_list.append(token)
word_list

num=len(word_list)
num

!pip install pymorphy2

import pymorphy2

morph = pymorphy2.MorphAnalyzer()

diction=[]
for word in word_list:
  diction.append(morph.parse(word)[0].normal_form)

with open("/content/drive/MyDrive/Курсовая/swl_optimum.txt") as f:
  swl = f.read ()

diction_new = [word for word in diction if not word in swl]

from collections import Counter

import pandas as pd

Counter(diction_new)

pos_list = []
for word in list(Counter(diction_new)):
  x = morph.parse(word)[0].tag.POS
  pos_list.append(x)

len(pos_list)

first_col = []
sec_col = []
th_col = []

for x, y in zip(Counter(diction_new), pos_list):
  first_col.append(x)
  sec_col.append(Counter(diction_new)[x])
  th_col.append(y)

df = pd.DataFrame(zip(first_col, sec_col, th_col))
df.columns=['Слово', 'Абсолютная частота', 'Часть речи']

df.insert(2, 'Относительная частота', df['Абсолютная частота'].apply(lambda z: z/num*100))

rslt_df = df.sort_values(by='Абсолютная частота', ascending = False)
rslt_df

rslt_df.to_excel('Dictionary2.xlsx', index=False)

df_pos = pd.DataFrame({
    'Количество': df['Часть речи'].value_counts (),
    'Доля': (df['Часть речи'].value_counts ())/len(pos_list)*100
}).fillna(0) #Что это fillna? (импутировать нулевые значения в столбце с помощью функции)

print(df_pos[["Количество",
              "Доля"]].sort_values(["Количество",
                                    "Доля"], ascending=False))

df_pos_new= df_pos.drop('Количество', axis=1)

res3 = df_pos_new.T

res3['VERB'] = res3['INFN'] +res3['VERB']+res3['PRTF']+res3['GRND']
res3['REST'] = res3['NUMR'] +res3['CONJ']+res3['PRED']+res3['INTJ']+res3['ADJS']+res3['PRCL']+res3['PREP']+res3['COMP']+res3['NPRO']+res3['ADVB']

res4=res3.drop(['INFN', 'PRTF', 'GRND', 'NUMR', 'CONJ', 'PRED', 'INTJ', 'ADJS', 'PRCL', 'PREP', 'COMP', 'NPRO', 'ADVB'], axis=1)

res5 = res4.T

rslt_df3 = res5.sort_values(by='Доля', ascending = False)

res5_new = rslt_df3.reset_index()

res5_new.columns=['Часть речи', 'Доля']
res5_new

dataframe = pd.DataFrame({'Часть речи': res5_new['Часть речи'],
                          'Доля': res5_new['Доля']})

dataframe.groupby(['Часть речи']).sum().plot(kind='pie', autopct='%1.0f%%', y='Доля')