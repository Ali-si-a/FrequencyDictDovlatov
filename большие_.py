# -*- coding: utf-8 -*-
"""Большие #

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rq2HeR_sPYN5E316ZT3wW-arOjB4s5MX
"""

!pip install openpyxl
import openpyxl
!pip install stanza
import stanza
stanza.download('ru')
ppln = stanza.Pipeline('ru', processors='tokenize,pos,lemma')
import pandas as pd

wb_obj = openpyxl.load_workbook("/content/2.xlsx")
sheet_obj = wb_obj.active
with open("/content/swl_optimum.txt") as f:
  swl = f.read()

for_checking_lemma_pos = []  # для дальнейшего вычленения из словаря пары ЛЕММА_ЧАСТЬ РЕЧИ, чтобы потом составить общий частотный фрейм по жанрам

all = []  # сначала сюда грузим списки уникальных троек в виде строки 'Lemma_POS_Genre' для каждого текста

i = 2

while i < 17:
  cell_B = 'B'+str(i)
  cell_A = 'A'+str(i)
  lst = []
  try:
    if '#' in sheet_obj[cell_A].value:
      print(sheet_obj[cell_A].value)
      lst.append(sheet_obj[cell_A].value)
      new_i = i+1
      if '#' in (sheet_obj['A'+str(new_i)].value):
        lst.append(sheet_obj['A'+str(new_i)].value)
        new_i1 = i+2
        if '#' in (sheet_obj['A'+str(new_i1)].value):
          lst.append(sheet_obj['A'+str(new_i1)].value)
          text=' '.join(lst)
          i = new_i1
          new_i2 = i+3
          if '#' in (sheet_obj['A'+str(new_i2)].value):
            lst.append(sheet_obj['A'+str(new_i2)].value)
            text=' '.join(lst)
            i = new_i2
            new_i3 = i+4
            if '#' in (sheet_obj['A'+str(new_i3)].value):
              lst.append(sheet_obj['A'+str(new_i3)].value)
              text=' '.join(lst)
              i = new_i3
              new_i4 = i+5
              if '#' in (sheet_obj['A'+str(new_i4)].value):
                lst.append(sheet_obj['A'+str(new_i4)].value)
                text=' '.join(lst)
                i = new_i4
                new_i5 = i+6
                if '#' in (sheet_obj['A'+str(new_i5)].value):
                  lst.append(sheet_obj['A'+str(new_i5)].value)
                  text=' '.join(lst)
                  i = new_i5
                  new_i6 = i+7
                  if '#' in (sheet_obj['A'+str(new_i6)].value):
                    lst.append(sheet_obj['A'+str(new_i6)].value)
                    text=' '.join(lst)
                    i = new_i6
                else:
                  text = ' '.join(lst)
                  i = new_i5
              else:
                text = ' '.join(lst)
                i = new_i4
            else:
              text = ' '.join(lst)
              i = new_i3
          else:
            text = ' '.join(lst)
            i = new_i2
        else:
          text = ' '.join(lst)
          i = new_i1
      else:
        text=' '.join(lst)
        i = new_i
    else:
      text = sheet_obj[cell_A].value
  except:
    pass

  doc = ppln(text)

  #print(text[:20])

  each_text = []  # сюда грузим тройки сугубо каждого текста

  for sent in doc.sentences:
    for word in sent.words:
      if word.lemma not in swl:
        triplet = str(word.lemma)+'_'+str(word.upos)+'_'+sheet_obj[cell_B].value  # создаём тройки
        pair = str(word.lemma)+'_'+str(word.upos)  # эта пара нужна для того, чтобы потом проверить, есть ли эта пара в обоих жанрах в словаре
        if triplet not in each_text:
          each_text.append(triplet)
        if pair not in for_checking_lemma_pos:
          for_checking_lemma_pos.append(pair)

  all.append(each_text)

  i += 1

final_dict = {}  # создаем словарь для подсчета вхождений в каждый тип текста

for sublist in all:
 for x in sublist:
    if x not in final_dict:
      final_dict[x] = 1  # задаём изначальную частоту, если нет тройки
    else:
      final_dict[x] += 1  # увеличиваем на 1, если есть в других текстах (считаем кол-во текстов по типу)

final_frame = []  # для итогового фрейма, будут внутри списки из пяти значений: лемма, pos, худ, публ, сумма худ+публ

for check in for_checking_lemma_pos:

 by_type_lemma = ['', '', 0, 0, 0]

 for i in final_dict:
    if check in i:
      lst = i.split('_')
      if lst[-1] == 'Худ': #[-1] - end в триплете
        by_type_lemma[0] = lst[0]
        by_type_lemma[1] = lst[1]
        by_type_lemma[2] = final_dict[i]
      if lst[-1] == 'Публ': #[-1] - end в триплете
        by_type_lemma[0] = lst[0]
        by_type_lemma[1] = lst[1]
        by_type_lemma[3] = final_dict[i]

 by_type_lemma[4] = by_type_lemma[2] + by_type_lemma[3]  # сумма для последнего значения худ+публ

 final_frame.append(by_type_lemma)


df = pd.DataFrame(final_frame, columns = ['Лемма', 'Часть речи', 'Худ', 'Публ', 'Общ (т)'])
df

df2 = pd.read_excel('/content/&.xlsx', index_col=0)
df2

result = pd.merge(df, df2, how='outer')
result

result1=pd.pivot_table(result, index=['Лемма', 'Часть речи'], values=['Худ', 'Публ', 'Общ (т)'], aggfunc='sum')
result1

result2 = result1.reset_index()
result2

df3 = pd.read_excel('/content/FREQ1.xlsx', index_col=0)
df3

df4 = df3.reset_index()
df4

result_st = pd.merge(result2, df4, how='inner', on=('Лемма', 'Часть речи'))
result_st

result_st1 = result_st[['Лемма', 'Часть речи', 'Публ', 'Публ (ipm)', 'Худ', 'Худ (ipm)', 'Общ (т)', 'Общ (ipm)']]
result_st1

result_st2=result_st1.sort_values(by=['Общ (ipm)'], ascending=False)

result_st2.to_excel('DICTIONARY.xlsx')